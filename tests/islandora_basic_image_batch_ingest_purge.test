<?php

/**
 * @file
 * Ingests a batch of images into a randomly generated image collection.
 * Batch images are a variety of mimetypes and extensions.
 */

class IslandoraBasicImageBatchImgestPurge extends IslandoraCollectionWebTestCase {

  /**
   * Get test information
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Basic Image Batch Ingest/Purge',
      'description' => 'Ingests and purges a batch of images with various mimetypes into a randomly generated image collection',
      'group' => 'Islandora Object Management',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_basic_image',
      'islandora_basic_collection',
      'islandora_batch',
      'islandora_importer',
      'zip_importer',
    ));
  }

  /**
   * Attempts to ingest and purge a batch of images from a collection
   */

  public function testIngestPurgeBatchImage() {

    // Sets up the test environment
    $user = $this->createDrupalAdminUser();
    $this->drupalLogin($user);
    $label = $this->randomName(16);
    $suffix = $this->randomName(16);
    $collectionpid = 'islandora:' . $suffix;
    $this->createRootTestCollection($label, 'islandora:sp_basic_image', $collectionpid);

    // Attempts to ingest a batch of objects
    $path = 'islandora/object/' . $collectionpid . '/manage/collection/batch_import';
    $file = drupal_get_path('module', 'islandora_image') . '/tests/fixtures/test.zip';
    $edit = array('importer' => 'zip_importer');
    $this->drupalPost($path, $edit, t('Submit'));
    $edit = array(
      'files[file]' => $file,
      'content_model[islandora:sp_basic_image]' => TRUE,
    );
    $this->drupalPost(NULL, $edit, t('Import'));

    // Deletes the collection and checks for deletion confirmation.
    $this->deleteRootTestCollectionByPid($collectionpid);
  }
}

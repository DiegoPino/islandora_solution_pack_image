<?php

/**
 * @file
 * Attempts to ingest an image into a randomly generated image collection
 */

class IslandoraBasicImageIngestTestCase extends CollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Basic Image Ingest/Purge',
      'description' => 'Ingests and purges an image from a randomly generated image collection',
      'group' => 'Islandora Object Management',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_basic_image',
      'islandora_basic_collection',
    ));
  }

  /**
   * Creates an administrative user and attempts to ingest a test image.
   */
  public function testIngestPurgeBasicImage() {

    // Sets up the testing space.
    $user = $this->createDrupalAdminUser();
    $this->drupalLogin($user);
    $label = $this->randomName(16);
    $suffix = $this->randomName(16);
    $collectionpid = 'islandora:' . $suffix;
    $this->createRootTestCollection($label, 'islandora:sp_basic_image', $collectionpid);

    // Attempts to create an object.
    $path = 'islandora/object/' . $collectionpid . '/manage/overview/ingest';
    $edit = array();
    $file = drupal_get_path('module', 'islandora_basic_image') . '/tests/fixtures/test.png';
    $edit['files[file]'] = $file;
    $this->drupalPost($path, $edit, t('Ingest'));
    $this->assertText('New Object', 'Image object was created', 'Islandora');
    $path = $this->url;
    $imagepath = $path . '/datastream/OBJ/view';
    $this->assertLinkByHref($imagepath, 0, t('Ingested image found on view page'), t('Islandora'));

    // Determines whether or not the appropriate datastreams were created.
    $objectpid = arg(5, $this->url);
    $path = 'islandora/object/' . $objectpid . '/manage/datastreams';
    $this->drupalGet($path);
    $this->assertLink(t('RELS-EXT'), 'RELS-EXT datastream created.', 'Islandora');
    $this->assertLink(t('DC'), 'Dublin Core datastream created', 'Islandora');
    $this->assertLink(t('OBJ'), 'OBJ datastream created', 'Islandora');
    $this->assertLink(t('TN'), 'Thumbnail datastream created', 'Islandora');
    $this->assertLink(t('MEDIUM_SIZE'), 'Medium-sized image derivative datastream created', 'Islandora');

    // Attempts to delete the object and then collection.
    $path = 'islandora/object/' . $objectpid . '/manage/properties';
    $edit = array();
    $this->drupalPost($path, $edit, t('Delete'));
    $path = $this->url;
    $this->drupalPost($path, $edit, t('Delete'));
    $this->assertNoText('New Object', 'Object successfully removed.');
    $this->deleteRootTestCollectionByPid($collectionpid);
  }
}
